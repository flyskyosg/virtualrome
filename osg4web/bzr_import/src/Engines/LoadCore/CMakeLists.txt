PROJECT(LoadCore)

SET(CMAKE_DEBUG_POSTFIX  "d")


ADD_DEFINITIONS(-DOSG4WEBCORE_LIBRARY)

SET(${PROJECT_NAME}_BIN_PATH "${PROJECT_NAME}")

SET("${PROJECT_NAME}_src" ${CMAKE_CURRENT_SOURCE_DIR}/src)
GRAB_FILES( "${PROJECT_NAME}_src" )

SET("${PROJECT_NAME}_include" ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET("${PROJECT_NAME}_includef" ${CMAKE_CURRENT_SOURCE_DIR}/include/LoadCore)
GRAB_FILES( "${PROJECT_NAME}_includef" )

ADD_LIBRARY(${PROJECT_NAME}
	SHARED
	${${PROJECT_NAME}_includef_FILES}
    	${${PROJECT_NAME}_src_FILES}
    	${OSG4WEB_ROOT}/src/Engines/CoreBase/src/CoreBase.cpp
)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PROJECT_LABEL "Engine_${PROJECT_NAME}")
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME core_run)

#INCLUDE_DIRECTORIES( ${OSG_INCLUDE_DIR} ${OSG4WEB_ROOT}/src/Engines/CoreBase/include ${${PROJECT_NAME}_include} )

INCLUDE_DIRECTORIES( ${${PROJECT_NAME}_include} ${OSG_INCLUDE_DIR} ${OSG4WEB_ROOT}/src/Engines/CoreBase/include  ${OSG4WEB_ROOT}/include)

LINK_WITH_VARIABLES(${PROJECT_NAME} OSG_LIBRARY OSGUTIL_LIBRARY OSGDB_LIBRARY OSGGA_LIBRARY OSGFX_LIBRARY OSGTEXT_LIBRARY OSGVIEWER_LIBRARY OPENTHREADS_LIBRARY)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} CommonCore)


IF(FIREFOX_PLUGIN_DIR)
		
	SET(OUTPUT_LIBDIR ${FIREFOX_PLUGIN_DIR}/${${PROJECT_NAME}_BIN_PATH})
	MAKE_DIRECTORY(${OUTPUT_LIBDIR})

###################   data copying ###################
	SET(DUMMY_SHA1 "test_${PROJECT_NAME}")
	SET(OUTPUT_Debug_DIR $ENV{APPDATA}/osg4web/${DUMMY_SHA1})

	SET(OUTPUT_DATADIR ${OUTPUT_LIBDIR})
#	SET(OUTPUT_DATADIR ${OUTPUT_LIBDIR}/data)
	SET(FONT_DIR ${OSG4WEB_ROOT}/var/stuffs/fonts)
	SET(MODEL_DIR ${OSG4WEB_ROOT}/var/stuffs/models)
	SET(DATA_SRCS ${FONT_DIR}/arial.ttf ${MODEL_DIR}/osg4web_world.ive)
	SET(DATA_TARGET_FILES "")

	FOREACH( MYFILE ${DATA_SRCS} )
		GET_FILENAME_COMPONENT(MYFILE_TGT ${MYFILE} NAME)
		ADD_CUSTOM_COMMAND(
			OUTPUT ${OUTPUT_DATADIR}/${MYFILE_TGT}
	    		COMMAND ${CMAKE_COMMAND} -E copy ${MYFILE} ${OUTPUT_DATADIR}
	    		DEPENDS ${MYFILE}
		    	)
		SET(DATA_TARGET_FILES ${DATA_TARGET_FILES} ${OUTPUT_DATADIR}/${MYFILE_TGT})
	ENDFOREACH( MYFILE )

	GET_TARGET_PROPERTY(${PROJECT_NAME}_Debug_LOCATION ${PROJECT_NAME} DEBUG_LOCATION)
	GET_TARGET_PROPERTY(${PROJECT_NAME}_Release_LOCATION ${PROJECT_NAME} RELEASE_LOCATION)

	FOREACH(BTYPE Debug Release)
		GET_FILENAME_COMPONENT( MYNAME_${BTYPE} ${${PROJECT_NAME}_${BTYPE}_LOCATION} NAME)
		ADD_CUSTOM_COMMAND(
			OUTPUT ${OUTPUT_LIBDIR}/${MYNAME_${BTYPE}}
    			COMMAND ${CMAKE_COMMAND} -E copy ${${PROJECT_NAME}_${BTYPE}_LOCATION} ${OUTPUT_LIBDIR}
    			DEPENDS ${PROJECT_NAME}
    		)

		ADD_CUSTOM_TARGET(Engine_${PROJECT_NAME}_Prepare_${BTYPE}
			DEPENDS ${OUTPUT_LIBDIR}/${MYNAME_${BTYPE}} ${DATA_TARGET_FILES}
			)

    		SET(FIREFOX_STUFF_LIST_${BTYPE} "${FIREFOX_STUFF_LIST_${BTYPE}} ${OUTPUT_LIBDIR}/${MYNAME_${BTYPE}}") 
	ENDFOREACH(BTYPE Debug Release)
		

########################### test stuff ##################################
	CONFIGURE_FILE(${OSG4WEB_ROOT}/run_firefox.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/run_firefox.cmake @ONLY)

	SET(HTML_TEST_DIR ${CMAKE_CURRENT_SOURCE_DIR}/html)

	CONFIGURE_FILE(${HTML_TEST_DIR}/${PROJECT_NAME}.html.in ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.html @ONLY)
	ADD_TEST(${PROJECT_NAME}_run_firefox ${CMAKE_COMMAND} -DURL=file:\"//${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.html\" -P ${CMAKE_CURRENT_BINARY_DIR}/run_firefox.cmake )
ENDIF(FIREFOX_PLUGIN_DIR)


INCLUDE(ModuleInstall OPTIONAL)

